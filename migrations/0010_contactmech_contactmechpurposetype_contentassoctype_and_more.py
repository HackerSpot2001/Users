# Generated by Django 4.2 on 2024-01-19 17:22

import Helpers.Utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Users', '0009_alter_userlogin_party'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMech',
            fields=[
                ('contact_mech_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('info_string', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ContactMech',
                'db_table': 'contact_mech',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContactMechPurposeType',
            fields=[
                ('contact_mech_purpose_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ContactMechPurposeType',
                'db_table': 'contact_mech_purpose_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContentAssocType',
            fields=[
                ('content_assoc_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ContentAssocType',
                'db_table': 'content_assoc_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContentPurposeType',
            fields=[
                ('content_purpose_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ContentPurposeType',
                'db_table': 'content_purpose_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataResource',
            fields=[
                ('data_resource_id', models.CharField(default=Helpers.Utils.gen_data_resource, max_length=20, primary_key=True, serialize=False)),
                ('data_resource_name', models.CharField(blank=True, max_length=255, null=True)),
                ('locale_string', models.CharField(blank=True, max_length=10, null=True)),
                ('mime_type_id', models.CharField(blank=True, max_length=255, null=True)),
                ('object_info', models.CharField(blank=True, max_length=255, null=True)),
                ('related_detail_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.CharField(blank=True, max_length=1, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_by_user_login', models.ForeignKey(blank=True, db_column='created_by_user_login', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'DataResource',
                'db_table': 'data_resource',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoAssocType',
            fields=[
                ('geo_assoc_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'GeoAssocType',
                'db_table': 'geo_assoc_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartyGroup',
            fields=[
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Users.party')),
                ('group_name', models.CharField(blank=True, max_length=100, null=True)),
                ('group_name_local', models.CharField(blank=True, max_length=100, null=True)),
                ('office_site_name', models.CharField(blank=True, max_length=100, null=True)),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('num_employees', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('ticker_symbol', models.CharField(blank=True, max_length=10, null=True)),
                ('comments', models.CharField(blank=True, max_length=255, null=True)),
                ('logo_image_url', models.CharField(blank=True, max_length=2000, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'PartyGroup',
                'db_table': 'party_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ElectronicText',
            fields=[
                ('data_resource', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Users.dataresource')),
                ('text_data', models.TextField(blank=True, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ElectronicText',
                'db_table': 'electronic_text',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TelecomNumber',
            fields=[
                ('contact_mech', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Users.contactmech')),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('area_code', models.CharField(blank=True, max_length=10, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=60, null=True)),
                ('ask_for_name', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'TelecomNumber',
                'db_table': 'telecom_number',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartyContentType',
            fields=[
                ('party_content_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.partycontenttype')),
            ],
            options={
                'verbose_name_plural': 'PartyContentType',
                'db_table': 'party_content_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoType',
            fields=[
                ('geo_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('has_table', models.CharField(blank=True, max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.geotype')),
            ],
            options={
                'verbose_name_plural': 'GeoType',
                'db_table': 'geo_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Geo',
            fields=[
                ('geo_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('geo_name', models.CharField(blank=True, max_length=100, null=True)),
                ('geo_code', models.CharField(blank=True, max_length=60, null=True)),
                ('geo_sec_code', models.CharField(blank=True, max_length=60, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=60, null=True)),
                ('well_known_text', models.TextField(blank=True, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('geo_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.geotype')),
            ],
            options={
                'verbose_name_plural': 'Geo',
                'db_table': 'geo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataResourceType',
            fields=[
                ('data_resource_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('has_table', models.CharField(blank=True, max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.dataresourcetype')),
            ],
            options={
                'verbose_name_plural': 'DataResourceType',
                'db_table': 'data_resource_type',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='dataresource',
            name='data_resource_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.dataresourcetype'),
        ),
        migrations.AddField(
            model_name='dataresource',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.statusitem'),
        ),
        migrations.AddField(
            model_name='dataresource',
            name='updated_by_user_login',
            field=models.ForeignKey(blank=True, db_column='updated_by_user_login', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dataresource_updated_by_user_login_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('content_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('has_table', models.CharField(blank=True, max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contenttype')),
            ],
            options={
                'verbose_name_plural': 'ContentType',
                'db_table': 'content_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('content_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('service_name', models.CharField(blank=True, max_length=255, null=True)),
                ('content_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('locale_string', models.CharField(blank=True, max_length=10, null=True)),
                ('mime_type_id', models.CharField(blank=True, max_length=255, null=True)),
                ('child_leaf_count', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('child_branch_count', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contenttype')),
                ('created_by_user_login', models.ForeignKey(blank=True, db_column='created_by_user_login', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('data_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.dataresource')),
                ('decorator_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='content_decorator_content_set', to='Users.content')),
                ('instance_of_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='content_instance_of_content_set', to='Users.content')),
                ('owner_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.content')),
                ('privilege_enum', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.enumeration')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.statusitem')),
                ('template_data_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='content_template_data_resource_set', to='Users.dataresource')),
                ('updated_by_user_login', models.ForeignKey(blank=True, db_column='updated_by_user_login', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='content_updated_by_user_login_login_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Content',
                'db_table': 'content',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContactMechType',
            fields=[
                ('contact_mech_type_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('has_table', models.CharField(blank=True, max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('parent_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contactmechtype')),
            ],
            options={
                'verbose_name_plural': 'ContactMechType',
                'db_table': 'contact_mech_type',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='contactmech',
            name='contact_mech_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contactmechtype'),
        ),
        migrations.CreateModel(
            name='PostalAddress',
            fields=[
                ('contact_mech', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Users.contactmech')),
                ('to_name', models.CharField(blank=True, max_length=100, null=True)),
                ('attn_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('house_number', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('house_number_ext', models.CharField(blank=True, max_length=60, null=True)),
                ('directions', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=60, null=True)),
                ('postal_code_ext', models.CharField(blank=True, max_length=60, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('city_geo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.geo')),
                ('country_geo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='postaladdress_country_geo_set', to='Users.geo')),
                ('municipality_geo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='postaladdress_municipality_geo_set', to='Users.geo')),
                ('postal_code_geo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='postaladdress_postal_code_geo_set', to='Users.geo')),
                ('state_province_geo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='postaladdress_state_province_geo_set', to='Users.geo')),
            ],
            options={
                'verbose_name_plural': 'PostalAddress',
                'db_table': 'postal_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartyContent',
            fields=[
                ('party_content_id', models.CharField(default=Helpers.Utils.gen_party_content, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.content')),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.party')),
                ('party_content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.partycontenttype')),
            ],
            options={
                'verbose_name_plural': 'PartyContent',
                'db_table': 'party_content',
                'managed': True,
                'unique_together': {('party', 'content', 'party_content_type', 'from_date')},
            },
        ),
        migrations.CreateModel(
            name='PartyContactMechPurpose',
            fields=[
                ('pcm_purpose_id', models.CharField(default=Helpers.Utils.generate_pcm_porpuse, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('contact_mech', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contactmech')),
                ('contact_mech_purpose_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contactmechpurposetype')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.party')),
            ],
            options={
                'verbose_name_plural': 'PartyContactMechPurpose',
                'db_table': 'party_contact_mech_purpose',
                'managed': True,
                'unique_together': {('party', 'contact_mech', 'contact_mech_purpose_type', 'from_date')},
            },
        ),
        migrations.CreateModel(
            name='PartyContactMech',
            fields=[
                ('pcm_id', models.CharField(default=Helpers.Utils.generate_pcm, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('extension', models.CharField(blank=True, max_length=255, null=True)),
                ('verified', models.CharField(blank=True, max_length=1, null=True)),
                ('comments', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('contact_mech', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contactmech')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.party')),
            ],
            options={
                'verbose_name_plural': 'PartyContactMech',
                'db_table': 'party_contact_mech',
                'managed': True,
                'unique_together': {('party', 'contact_mech', 'from_date')},
            },
        ),
        migrations.CreateModel(
            name='GeoAssoc',
            fields=[
                ('geo_assoc_id', models.CharField(default=Helpers.Utils.gen_geo_assoc, max_length=20, primary_key=True, serialize=False)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('geo', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.geo')),
                ('geo_assoc_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Users.geoassoctype')),
                ('geo_id_to', models.ForeignKey(db_column='geo_id_to', on_delete=django.db.models.deletion.DO_NOTHING, related_name='geoassoc_geo_id_to_set', to='Users.geo')),
            ],
            options={
                'verbose_name_plural': 'GeoAssoc',
                'db_table': 'geo_assoc',
                'managed': True,
                'unique_together': {('geo', 'geo_id_to')},
            },
        ),
        migrations.CreateModel(
            name='ContentAssoc',
            fields=[
                ('content_assoc_id', models.CharField(default=Helpers.Utils.gen_content_assoc, max_length=30, primary_key=True, serialize=False)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('sequence_num', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('map_key', models.CharField(blank=True, max_length=100, null=True)),
                ('upper_coordinate', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('left_coordinate', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('updated_stamp', models.DateTimeField(auto_now_add=True)),
                ('created_stamp', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.content')),
                ('content_assoc_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Users.contentassoctype')),
                ('content_id_to', models.ForeignKey(db_column='content_id_to', on_delete=django.db.models.deletion.DO_NOTHING, related_name='contentassoc_content_id_to_set', to='Users.content')),
                ('created_by_user_login', models.ForeignKey(blank=True, db_column='created_by_user_login', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('updated_by_user_login', models.ForeignKey(blank=True, db_column='updated_by_user_login', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contentassoc_updated_by_user_login_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ContentAssoc',
                'db_table': 'content_assoc',
                'managed': True,
                'unique_together': {('content', 'content_id_to', 'content_assoc_type', 'from_date')},
            },
        ),
    ]
